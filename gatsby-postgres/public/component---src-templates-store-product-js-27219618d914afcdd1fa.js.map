{"version":3,"sources":["webpack:///./src/templates/store-product.js"],"names":["product","data","postgres","url","id","title","createdAt","body","Stock","price","query","state","loading","error","fetchedData","componentDidMount","fetch","this","props","then","response","json","setState","render","className","key","Component"],"mappings":"6KAIe,sBAAe,IAEpBA,EAFmB,EAAXC,KAESC,SAAjBF,QACFG,EAAM,uCAAyCH,EAAQI,GAE7D,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKJ,EAAQK,OACb,4BACGL,EAAQM,WAEX,uBAAGF,GAAIJ,EAAQI,IAAI,sCAAnB,IAAmCJ,EAAQI,IAC3C,2BAAG,yCAAH,IAAsBJ,EAAQO,MAC9B,kBAACC,EAAD,CAAOL,IAAKA,IACZ,2BAAG,qCAAH,KAAmBH,EAAQS,UAM5B,IAAMC,EAAK,aAmBZF,E,4JAEJG,MAAQ,CACNC,SAAS,EACTC,OAAO,EACPC,YAAa,I,oHAGfC,kBAAA,WAAqB,IAAD,OAClBC,MAAMC,KAAKC,MAAMf,KACdgB,MAAK,SAAAC,GAEJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CACZR,YAAaO,EACbT,SAAS,Q,EAMjBW,OAAA,WAAU,IAAD,EAE0BN,KAAKN,MAA9BC,EAFD,EAECA,QAASE,EAFV,EAEUA,YAEjB,OACE,yBAAKU,UAAU,aACZZ,EACE,yCAEA,uBAAGa,IAAKX,GAAR,IAAuBA,EAAc,aAAe,cAApD,O,GAhCSY","file":"component---src-templates-store-product-js-27219618d914afcdd1fa.js","sourcesContent":["import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nexport default ({ data }) => {\n  \n  const { product } = data.postgres;\n  const url = 'https://localhost:5001/api/products/' + product.id;\n\n  return (\n    <Layout>\n      <div>\n        <h1>{product.title}</h1>\n        <h3>\n          {product.createdAt}\n        </h3>\n        <p id={product.id}><b>Código:</b> {product.id}</p>\n        <p><b>Descrição:</b> {product.body}</p>\n        <Stock url={url} />\n        <p><b>Preço:</b> €{product.price}</p>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($productId: Int!) {\n    postgres {\n      product: productById(id: $productId) {\n        id\n        title\n        body\n        price\n        stock\n        createdAt\n        author: userByAuthorId {\n          id\n          username\n        }\n      }\n    }\n  }\n`;\n\nclass Stock extends Component {\n\n  state = {\n    loading: true,\n    error: false,\n    fetchedData: [],\n  }\n\n  componentDidMount() {\n    fetch(this.props.url)\n      .then(response => {\n\n        return response.json();\n      })\n      .then(json => {\n        this.setState({\n          fetchedData: json,\n          loading: false,\n        })\n      })\n  }\n\n\n  render() {\n\n    const { loading, fetchedData } = this.state\n\n    return (\n      <div className=\"container\">\n        {loading ?\n          (<p>LOADING...</p>)\n          :\n          (<p key={fetchedData}> {fetchedData ? \"Disponivel\" : \"Indisponvel\"} </p>)\n        }\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}